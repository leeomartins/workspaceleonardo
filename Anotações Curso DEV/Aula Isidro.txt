UsuarioDAO

package br.com.isidrocorp.modernizacao.dao;

import org.springframework.data.repository.CrudRepository;

import br.com.isidrocorp.modernizacao.model.Usuario;

public interface UsuarioDAO extends CrudRepository<Usuario, Integer>{

}

----


package br.com.isidrocorp.modernizacao.controller;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.isidrocorp.modernizacao.dao.UsuarioDAO;
import br.com.isidrocorp.modernizacao.model.Usuario;

@RestController
public class UsuarioController {

	@Autowired // injeção de dependências
	UsuarioDAO dao;
	
	@GetMapping("/usuarios")
	public ArrayList<Usuario> recuperarTodos(){
		ArrayList<Usuario> lista;
		
		lista = (ArrayList<Usuario>)dao.findAll();
		
		return lista;
		
	}
}

-----



Classe Usuario
package br.com.isidrocorp.modernizacao.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity // defino que a classe usuário é armazenável em banco
@Table(name = "itmn_usuario") // e que está relacionada à tabela de nome itmn_usuario
public class Usuario {

	@Id // @Id indica que o atributo é chave primária
	@GeneratedValue(strategy = GenerationType.IDENTITY) // aqui indica que o valor é gerado automaticamente pelo banco
	@Column(name = "id_usuario") // defino o nome da coluna
	private int id;

	@Column(name = "nome_usuario", length = 100, nullable = false)
	private String nome;

	@Column(name = "email_usuario", length = 100, nullable = false)
	private String email;

	@Column(name = "racf_usuario", length = 7, nullable = false)
	private String racf;

	@Column(name = "senha_usuario", length = 50, nullable = false)
	private String senha;

	@Column(name = "link_foto", length = 255)
	private String linkFoto;

//. gets e sets 
}



--------


Tabela USUARIO
create table itmn_usuario (
   id_usuario    integer not null auto_increment,
   nome_usuario  varchar(100) not null,
   email_usuario varchar(100) not null,
   racf_usuario  varchar(7) not null,
   senha_usuario varchar(50) not null,
   link_foto     varchar(255),
   constraint pk_usuario primary key (id_usuario)
   
);


insert into itmn_usuario values
  (null, 'Professor Isidro', 'isidro@isidro.com', 'isidro','1234','https://avatars2.githubusercontent.com/u/6184696?s=460&v=4');
  
insert into itmn_usuario values
  (null, 'Mega Man', 'mega@man.com','megaman','1234','https://pbs.twimg.com/profile_images/1029816770897408000/aUljTnyv.jpg');





# configurando a porta do servidor
server.port = 8088

# configurando os parametros de conexao com a base de dados

# 1 - Obrigatório: usuario do banco de dados
spring.datasource.username = root

# 2 - Obrigatório: senha
spring.datasource.password = mysql

# 3 - Obrigatório: url da base de dados
spring.datasource.url = jdbc:mysql://localhost:3306/proj_modernizacao?useTimezone=true&serverTimezone=UTC

# 4 - Obrigatório: "dialeto" da conversa
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# 5 - Opcional: mostrar o sql gerado no console
spring.jpa.show_sql = true


----------





Link do Trello:
https://trello.com/invite/b/ObvwlsNF/28654b7fbc9223995d0ae4bf09af4143/projeto-turma-13






package br.com.isidrocorp.hello.model;

public class Produto {
	private int id;
	private String descricao;
	private double preco;
	private int    qtdEstoque;
	
	public Produto(int id, String descricao, double preco, int qtdEstoque) {
		super();
		this.id = id;
		this.descricao = descricao;
		this.preco = preco;
		this.qtdEstoque = qtdEstoque;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getDescricao() {
		return descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	public double getPreco() {
		return preco;
	}

	public void setPreco(double preco) {
		this.preco = preco;
	}

	public int getQtdEstoque() {
		return qtdEstoque;
	}

	public void setQtdEstoque(int qtdEstoque) {
		this.qtdEstoque = qtdEstoque;
	}
	
}


============================

package br.com.isidrocorp.hello.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.isidrocorp.hello.model.Produto;

/* toda classe que criarmos dentro do pacote controller deverá atender URLs vindas do browser
 * para tornar isso possível, DEVEMOS anotar a classe com @RestController
 * 
 * @RestController - torna nossa classe uma classe que atende solicitações WEB
 */

@RestController
public class HelloController {
	
	
	/* através do uso da anotação @GetMapping, permitimos ao browser acessar a URL
	 * 
	 * http://localhost:8088/hello e isso irá retornar uma mensagem de boas vindas
	 */
	@GetMapping("/hello")
	public String sayHello() {
		return "Hello World! O Isidro fala pa caramba!!!";
	}
	
	@GetMapping("/pagina")
	public String mostrarPagina() {
		return "<html> "
				+ "<body> "
				+ "  <h1> Teste de Pagina </h1>"
				+ "  <hr>"
				+ "  <p> Este eh um exemplo de pagina HTML que no fundo nao vai servir pra nada </p>"
				+ "</body>"
				+ "</html>";
	}
	
	
	@GetMapping("/produto")
	public Produto exibirProduto() {
		Produto p = new Produto(1,"Computador Top de linha", 4000.00, 5);
		return p;
	}

}